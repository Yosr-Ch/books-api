openapi: 3.0.1
info:
  title: Swagger Books API
  description: 'This is a sample server Books API server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
  termsOfService: http://swagger.io/terms/'
  contact:
    email: yosr.chebi@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://petstore.swagger.io/v2
- url: http://petstore.swagger.io/v2
tags:
- name: book
  description: Everything about your Books
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /book:
    get:
      tags:
      - book
      summary: Get all Books
      operationId: get_all_books
      parameters:
      - name: "page"
        in: "query"
        required: false
        schema:
            type: integer
      - name: "per_page"
        in: "query"
        required: false
        schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        400:
          description: "invalid parameters value"
      x-openapi-router-controller: swagger_server.controllers.book_controller
    post:
      tags:
      - book
      summary: Add a new book to the store
      operationId: add_book
      requestBody:
        description: Book object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-openapi-router-controller: swagger_server.controllers.book_controller
  /book/{bookId}:
    get:
      tags:
      - book
      summary: Find book by ID
      description: Returns a single book
      operationId: get_book_by_id
      parameters:
      - name: bookId
        in: path
        description: ID of book to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Book not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.book_controller
    put:
      tags:
      - book
      summary: Update an existing book
      operationId: update_book_with_id
      parameters:
      - name: bookId
        in: path
        description: ID of book that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Book object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Book not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-openapi-router-controller: swagger_server.controllers.book_controller
    delete:
      tags:
      - book
      summary: Deletes a book
      operationId: delete_book
      parameters:
      - name: bookId
        in: path
        description: Book id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Book not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.book_controller
  /author:
    get:
      tags:
      - author
      summary: Get all Authors
      operationId: get_all_authors
      parameters:
      - name: "page"
        in: "query"
        required: false
        schema:
            type: integer
      - name: "per_page"
        in: "query"
        required: false
        schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
        400:
          description: "invalid parameters value"
      x-openapi-router-controller: swagger_server.controllers.author_controller

components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        name: name
        id: 6
    Book:
      required:
      - isbn
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        isbn:
          type: string
          example: 9789630793292
        name:
          type: string
          example: Animal farm
        price:
          type: number
          format: double
        author:
          $ref: '#/components/schemas/Author'
        status:
          type: string
          description: book status in the store
          enum:
          - available
          - pending
          - sold
      example:
        id: 0
        isbn: 9789630793292
        name: Animal farm
        price: 7.19
        author:
          name: George Orwell
          id: 6
        status: available
    body:
      properties:
        name:
          type: string
          description: Updated name of the book
        status:
          type: string
          description: Updated status of the book
